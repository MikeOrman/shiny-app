GOF.C1.genes <- GOF.alterations$Hugo_Symbol[index.GOF.C1]
library(ggplot2)
# Test genes captured at different effect sizes and report as table
C2.table <- data.frame()
for (i in seq(.2, 1e-5, length.out = 20)){
index.LOF.C2 <- (abs(LOF.alterations$`LOF alteration rate: Metastatic WT patients`-LOF.alterations$`LOF alteration rate: Primary WT patients`) <= i)
LOF.C2.genes <- LOF.alterations$Hugo_Symbol[index.LOF.C2]
index.GOF.C2 <- ((abs(GOF.alterations$`GOF alteration rate: Metastatic WT patients`- GOF.alterations$`GOF alteration rate: Primary WT patients`)) <= i)
GOF.C2.genes <- GOF.alterations$Hugo_Symbol[index.GOF.C2]
LOF.genes <- intersect(LOF.C1.genes, LOF.C2.genes)
GOF.genes <- intersect(GOF.C1.genes, GOF.C2.genes)
genes.captured <- length(LOF.genes) + length(GOF.genes)
C2.table[nrow(C2.table)+1,c(1,2)] <- c(i, genes.captured)
}
colnames(C2.table) <- c("WT Alteration Ratio Difference: |Met - Primary|", "Genes Remaining")
library(DT)
ggplot(data = C2.table, aes(`WT Alteration Ratio Difference: |Met - Primary|`, `Genes Remaining`)) + geom_point() + xlab("Constraint 2 Cutoff")
print("A C2 cutoff of <= 2% captures ~3000 genes that remain for analysis as subtype-specific metastatic regulators")
# Set cutoff
cutoff <- 0.02
# Filter LOF.alterations
index.LOF.C2 <- (abs(LOF.alterations$`LOF alteration rate: Metastatic WT patients`-LOF.alterations$`LOF alteration rate: Primary WT patients`) <= cutoff)
LOF.C2.genes <- LOF.alterations$Hugo_Symbol[index.LOF.C2]
# Filter ampplifications
index.GOF.C2 <- ((abs(GOF.alterations$`GOF alteration rate: Metastatic WT patients`- GOF.alterations$`GOF alteration rate: Primary WT patients`)) <= cutoff)
GOF.C2.genes <- GOF.alterations$Hugo_Symbol[index.GOF.C2]
filtered.LOF.alterations <- intersect(LOF.C1.genes, LOF.C2.genes)
filtered.GOF.alterations <- intersect(GOF.C1.genes, GOF.C2.genes)
LOF.genes <- setdiff(filtered.LOF.alterations, filtered.GOF.alterations)
GOF.genes <- setdiff(filtered.GOF.alterations, filtered.LOF.alterations)
LOF.genes <- as.data.frame(LOF.genes)
LOF.genes[,2] <- "LOF"
for (i in (1:nrow(LOF.genes))) {
print(i)
index1 <- which(met.coloss.LOF.frequency$Hugo_Symbol == LOF.genes[i,1])
index2 <- which(primary.coloss.LOF.frequency$Hugo_Symbol == LOF.genes[i,1])
index3 <- which(LOF.enrichment$`Hugo Symbol` == LOF.genes[i,1])
LOF.genes[i,3] <- (met.coloss.LOF.frequency$`LOF alteration rate: Metastatic coloss patients`[index1] -
primary.coloss.LOF.frequency$`LOF alteration rate: Primary coloss patients`[index2])
LOF.genes[i,4] <- LOF.enrichment$`Enrichment p-val`[index3]
}
# Construct LOF alteration table
if (length(LOF.genes) > 0){
LOF.genes <- as.data.frame(LOF.genes)
LOF.genes[,2] <- "LOF"
for (i in (1:nrow(LOF.genes))) {
index1 <- which(met.coloss.LOF.frequency$Hugo_Symbol == LOF.genes[i,1])
index2 <- which(primary.coloss.LOF.frequency$Hugo_Symbol == LOF.genes[i,1])
index3 <- which(LOF.enrichment$`Hugo Symbol` == LOF.genes[i,1])
LOF.genes[i,3] <- (met.coloss.LOF.frequency$`LOF alteration rate: Metastatic coloss patients`[index1] -
primary.coloss.LOF.frequency$`LOF alteration rate: Primary coloss patients`[index2])
LOF.genes[i,4] <- LOF.enrichment$`Enrichment p-val`[index3]
}
colnames(LOF.genes) <- c("Hugo Symbol", "Alteration", "Subtype Alteration Ratio Difference (Met - Primary)","Enrichment pval")
}
# Construct GOF alteration table
if (length(GOF.genes) > 0){
GOF.genes <- as.data.frame(GOF.genes)
GOF.genes[,2] <- "GOF"
for (i in (1:nrow(GOF.genes))) {
index1 <- which(met.coloss.GOF.frequency$Hugo_Symbol == GOF.genes[i,1])
index2 <- which(primary.coloss.GOF.frequency$Hugo_Symbol == GOF.genes[i,1])
index3 <- which(GOF.enrichment$`Hugo Symbol` == GOF.genes[i,1])
GOF.genes[i,3] <- (met.coloss.GOF.frequency$`GOF alteration rate: Metastatic coloss patients`[index1] -
primary.coloss.GOF.frequency$`GOF alteration rate: Primary coloss patients`[index2])
GOF.genes[i,4] <- GOF.enrichment$`Enrichment p-val`[index3]
}
colnames(GOF.genes) <- c("Hugo Symbol", "Alteration", "Subtype Alteration Ratio Difference (Met - Primary)","Enrichment pval")
}
# Combine alteration tables
if ((length(LOF.genes) > 0) & (length(GOF.genes) > 0)){
summary <- rbind(LOF.genes, GOF.genes)
}
if ((length(LOF.genes) > 0) & (length(GOF.genes) == 0)){
summary <- (LOF.genes)
}
if ((length(LOF.genes) == 0) & (length(GOF.genes) > 0)){
summary <- (GOF.genes)
}
library(DT)
datatable(summary)
metastatic <- summary$`Enrichment pval`
hist(metastatic, breaks = seq(0, 1, by = 0.05),
xlab = "Enrichment p value", ylab = "Number of genes", main = "Met:Primary Subtype Enrichment")
library(ggplot2)
library(ggrepel)
# Order hits by increasing alteration rate in metastatic subtype
summary <- summary[order(summary$`Subtype Alteration Ratio Difference (Met - Primary)`, decreasing = TRUE),]
summary[,5] <- c(1:nrow(summary))
colnames(summary)[5] <- "Gene Rank"
# Report summary
datatable(summary)
# Plot ranked summary data
ggplot(data = summary, mapping = aes(`Gene Rank`, `Subtype Alteration Ratio Difference (Met - Primary)`, label = `Hugo Symbol`)) + geom_point() + ggtitle("Alteration Frequency Difference: Met - Primary") + ylim(-.4,.4) + geom_text_repel(data = subset(summary, `Gene Rank` <= 2 | `Gene Rank` >= 3044), nudge_x = 0, nudge_y = -.165)
# Abida RNA seq data in FPKM
Abida.mRNA <- read.table("Abida mRNA seq.txt", header = TRUE, sep = "\t", check.names = FALSE)
# TCGA RNA seq data in RSEM
TCGA.mRNA <- read.table("TCGA mRNA seq.txt", header = TRUE, sep = "\t", check.names = FALSE)
TCGA.mRNA <- TCGA.mRNA[,c(1,3:ncol(TCGA.mRNA))]
# Taylor microarray data
Taylor.mRNA <- read.table("Taylor microarray.txt", header = TRUE, sep = "\t", check.names = FALSE)
# Abida RNA seq data in FPKM
Abida.mRNA <- read.table("Abida mRNA seq.txt", header = TRUE, sep = "\t", check.names = FALSE)
# TCGA RNA seq data in RSEM
TCGA.mRNA <- read.table("TCGA mRNA seq.txt", header = TRUE, sep = "\t", check.names = FALSE)
TCGA.mRNA <- TCGA.mRNA[,c(1,3:ncol(TCGA.mRNA))]
# Take intersection of genes in mRNA datasets and genomic analysis
genes <- intersect(Abida.mRNA$Hugo_Symbol, TCGA.mRNA$Hugo_Symbol)
genes <- intersect(genes, Taylor.mRNA$Hugo_Symbol)
# Abida RNA seq data in FPKM
Abida.mRNA <- read.table("Abida mRNA seq.txt", header = TRUE, sep = "\t", check.names = FALSE)
# TCGA RNA seq data in RSEM
TCGA.mRNA <- read.table("TCGA mRNA seq.txt", header = TRUE, sep = "\t", check.names = FALSE)
TCGA.mRNA <- TCGA.mRNA[,c(1,3:ncol(TCGA.mRNA))]
# Take intersection of genes in mRNA datasets and genomic analysis
genes <- intersect(Abida.mRNA$Hugo_Symbol, TCGA.mRNA$Hugo_Symbol)
genes <- intersect(genes, summary$`Hugo Symbol`)
# Filter genes from genomic analysis that lack mRNA measurements
index <- c()
for (i in (1:length(summary$`Hugo Symbol`))){
if (sum(summary$`Hugo Symbol`[i] == genes) == 1){
index[i] = TRUE
}
if (sum(summary$`Hugo Symbol`[i] == genes) == 0){
index[i] = FALSE
}
}
summary <- summary[index,]
# Metastatic subtype setting (Abida, coloss)
Abida.DGE <- concordant_DGE(summary, met.coloss, Abida.mRNA)
source("analysis scripts.R")
# Metastatic subtype setting (Abida, coloss)
Abida.DGE <- concordant_DGE(summary, met.coloss, Abida.mRNA)
source('~/Github/Projects/shiny app dev/analysis scripts.R')
# Metastatic subtype setting (Abida, coloss)
Abida.DGE <- concordant_DGE(summary, met.coloss, Abida.mRNA)
View(summary)
source('~/Github/Projects/shiny app dev/concordant DGE.R')
# Metastatic subtype setting (Abida, coloss)
Abida.DGE <- concordant_DGE(summary, met.coloss, Abida.mRNA)
# Primary subtype setting (TCGA, coloss)
TCGA.coloss <- subtype_subset(subtype_subset(TCGA, c("MAP3K7", "loss")), c("CHD1", "loss"))
TCGA.DGE <- concordant_DGE(summary, TCGA.coloss, TCGA.mRNA)
# Filter out genes lacking concordance measurements in primary and met settings. NA.omit clears NA from output - if NAs were present, this means <3 samples were available to compute concordant DGE.
Abida.DGE.filtered <- na.omit(Abida.DGE)
TCGA.DGE.filtered <- na.omit(TCGA.DGE)
genes <- intersect(Abida.DGE.filtered$`Hugo Symbol`, TCGA.DGE.filtered$`Hugo Symbol`)
index <- c()
for (i in 1:nrow(Abida.DGE.filtered)){
if (sum(Abida.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(Abida.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
Abida.DGE.filtered <- Abida.DGE.filtered[index,]
index <- c()
for (i in 1:nrow(TCGA.DGE.filtered)){
if (sum(TCGA.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(TCGA.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
TCGA.DGE.filtered <- TCGA.DGE.filtered[index,]
# Filter out genes that lack concordant gene expression with copy number loss in primary and metastatic settings
# Abida
index <- c()
for (i in 1:nrow(Abida.DGE.filtered)){
if (Abida.DGE.filtered[i,2] == "Deletion"){
if (Abida.DGE.filtered[i,3] < 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
if (Abida.DGE.filtered[i,2] == "Amplification"){
if (Abida.DGE.filtered[i,3] > 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
}
Abida.DGE.filtered <- Abida.DGE.filtered[index,]
# TCGA
index <- c()
for (i in 1:nrow(TCGA.DGE.filtered)){
if (TCGA.DGE.filtered[i,2] == "Deletion"){
if (TCGA.DGE.filtered[i,3] < 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
if (TCGA.DGE.filtered[i,2] == "Amplification"){
if (TCGA.DGE.filtered[i,3] > 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
}
TCGA.DGE.filtered <- TCGA.DGE.filtered[index,]
# Filter genes lacking concordant expression in both primary and metastatic settings
genes <- intersect(Abida.DGE.filtered$`Hugo Symbol`, TCGA.DGE.filtered$`Hugo Symbol`)
index <- c()
for (i in 1:nrow(Abida.DGE.filtered)){
if (sum(Abida.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(Abida.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
Abida.DGE.filtered <- Abida.DGE.filtered[index,]
index <- c()
for (i in 1:nrow(TCGA.DGE.filtered)){
if (sum(TCGA.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(TCGA.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
TCGA.DGE.filtered <- TCGA.DGE.filtered[index,]
library(metap)
concordant.DGE <- data.frame()
for (i in 1:nrow(Abida.DGE.filtered)){
concordant.DGE[i,1] <- Abida.DGE.filtered$`Hugo Symbol`[i]
concordant.DGE[i,2] <- Abida.DGE.filtered$Alteration[i]
concordant.DGE[i,3] <- Abida.DGE.filtered$`Concordant FC (altered:unaltered)`[i]
concordant.DGE[i,4] <- Abida.DGE.filtered$`p-val`[i]
concordant.DGE[i,5] <- TCGA.DGE.filtered$`Concordant FC (altered:unaltered)`[i]
concordant.DGE[i,6] <- TCGA.DGE.filtered$`p-val`[i]
concordant.DGE[i,7] <- (concordant.DGE[i,3] + concordant.DGE[i,5])/2
concordant.DGE[i,8] <- sumlog(c(concordant.DGE[i,4], concordant.DGE[i,6]))$p
}
View(Abida.DGE)
# Filter out genes lacking concordance measurements in primary and met settings. NA.omit clears NA from output - if NAs were present, this means <3 samples were available to compute concordant DGE.
Abida.DGE.filtered <- na.omit(Abida.DGE)
TCGA.DGE.filtered <- na.omit(TCGA.DGE)
genes <- intersect(Abida.DGE.filtered$`Hugo Symbol`, TCGA.DGE.filtered$`Hugo Symbol`)
# Filter out genes lacking concordance measurements in primary and met settings. NA.omit clears NA from output - if NAs were present, this means <3 samples were available to compute concordant DGE.
Abida.DGE.filtered <- na.omit(Abida.DGE)
TCGA.DGE.filtered <- na.omit(TCGA.DGE)
genes <- intersect(Abida.DGE.filtered$`Hugo Symbol`, TCGA.DGE.filtered$`Hugo Symbol`)
index <- c()
for (i in 1:nrow(Abida.DGE.filtered)){
if (sum(Abida.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(Abida.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
Abida.DGE.filtered <- Abida.DGE.filtered[index,]
index <- c()
for (i in 1:nrow(TCGA.DGE.filtered)){
if (sum(TCGA.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(TCGA.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
TCGA.DGE.filtered <- TCGA.DGE.filtered[index,]
# Filter out genes that lack concordant gene expression with copy number loss in primary and metastatic settings
# Abida
index <- c()
for (i in 1:nrow(Abida.DGE.filtered)){
if (Abida.DGE.filtered[i,2] == "Deletion"){
if (Abida.DGE.filtered[i,3] < 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
if (Abida.DGE.filtered[i,2] == "Amplification"){
if (Abida.DGE.filtered[i,3] > 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
}
Abida.DGE.filtered <- Abida.DGE.filtered[index,]
# TCGA
index <- c()
for (i in 1:nrow(TCGA.DGE.filtered)){
if (TCGA.DGE.filtered[i,2] == "Deletion"){
if (TCGA.DGE.filtered[i,3] < 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
if (TCGA.DGE.filtered[i,2] == "Amplification"){
if (TCGA.DGE.filtered[i,3] > 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
}
TCGA.DGE.filtered <- TCGA.DGE.filtered[index,]
# Filter out genes lacking concordance measurements in primary and met settings. NA.omit clears NA from output - if NAs were present, this means <3 samples were available to compute concordant DGE.
Abida.DGE.filtered <- na.omit(Abida.DGE)
TCGA.DGE.filtered <- na.omit(TCGA.DGE)
genes <- intersect(Abida.DGE.filtered$`Hugo Symbol`, TCGA.DGE.filtered$`Hugo Symbol`)
index <- c()
for (i in 1:nrow(Abida.DGE.filtered)){
if (sum(Abida.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(Abida.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
Abida.DGE.filtered <- Abida.DGE.filtered[index,]
index <- c()
for (i in 1:nrow(TCGA.DGE.filtered)){
if (sum(TCGA.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(TCGA.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
TCGA.DGE.filtered <- TCGA.DGE.filtered[index,]
# Filter out genes that lack concordant gene expression with copy number loss in primary and metastatic settings
# Abida
index <- c()
for (i in 1:nrow(Abida.DGE.filtered)){
if (Abida.DGE.filtered[i,2] == "LOF"){
if (Abida.DGE.filtered[i,3] < 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
if (Abida.DGE.filtered[i,2] == "GOF"){
if (Abida.DGE.filtered[i,3] > 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
}
Abida.DGE.filtered <- Abida.DGE.filtered[index,]
# TCGA
index <- c()
for (i in 1:nrow(TCGA.DGE.filtered)){
if (TCGA.DGE.filtered[i,2] == "LOF"){
if (TCGA.DGE.filtered[i,3] < 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
if (TCGA.DGE.filtered[i,2] == "GOF"){
if (TCGA.DGE.filtered[i,3] > 1){
index[i] <- TRUE
} else {index[i] <- FALSE}
}
}
TCGA.DGE.filtered <- TCGA.DGE.filtered[index,]
# Filter genes lacking concordant expression in both primary and metastatic settings
genes <- intersect(Abida.DGE.filtered$`Hugo Symbol`, TCGA.DGE.filtered$`Hugo Symbol`)
index <- c()
for (i in 1:nrow(Abida.DGE.filtered)){
if (sum(Abida.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(Abida.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
Abida.DGE.filtered <- Abida.DGE.filtered[index,]
index <- c()
for (i in 1:nrow(TCGA.DGE.filtered)){
if (sum(TCGA.DGE.filtered[i,1] == genes) > 0){
index[i] <- TRUE
}
if (sum(TCGA.DGE.filtered[i,1] == genes) == 0){
index[i] <- FALSE
}
}
TCGA.DGE.filtered <- TCGA.DGE.filtered[index,]
View(TCGA.DGE.filtered)
library(metap)
concordant.DGE <- data.frame()
for (i in 1:nrow(Abida.DGE.filtered)){
concordant.DGE[i,1] <- Abida.DGE.filtered$`Hugo Symbol`[i]
concordant.DGE[i,2] <- Abida.DGE.filtered$Alteration[i]
concordant.DGE[i,3] <- Abida.DGE.filtered$`Concordant FC (altered:unaltered)`[i]
concordant.DGE[i,4] <- Abida.DGE.filtered$`p-val`[i]
concordant.DGE[i,5] <- TCGA.DGE.filtered$`Concordant FC (altered:unaltered)`[i]
concordant.DGE[i,6] <- TCGA.DGE.filtered$`p-val`[i]
concordant.DGE[i,7] <- (concordant.DGE[i,3] + concordant.DGE[i,5])/2
concordant.DGE[i,8] <- sumlog(c(concordant.DGE[i,4], concordant.DGE[i,6]))$p
}
colnames(concordant.DGE) <- c("Hugo Symbol", "Alteration", "Abida Concordant FC", "Abida p-val", "TCGA Concordant FC", "TCGA p-val", "Mean Concordant FC", "Combined p-val")
library(metap)
summary.concordance <- data.frame()
for (i in 1:nrow(concordant.DGE)){
genomic.index <- which(concordant.DGE$`Hugo Symbol`[i] == summary$`Hugo Symbol`)
summary.concordance[i,1] <- summary$`Hugo Symbol`[genomic.index]
summary.concordance[i,2] <- summary$Alteration[genomic.index]
summary.concordance[i,3] <- summary$`Subtype Alteration Ratio Difference (Met - Primary)`[genomic.index]
summary.concordance[i,4] <- summary$pval[genomic.index]
summary.concordance[i,5] <- concordant.DGE$`Mean Concordant FC`[i]
summary.concordance[i,6] <- concordant.DGE$`Combined p-val`[i]
p.vec <- c(summary.concordance[i,4], summary.concordance[i,6])
integrated.combined.pval <- sumlog(p.vec)$p
summary.concordance[i,7] <- integrated.combined.pval
}
View(concordant.DGE)
library(metap)
summary.concordance <- data.frame()
for (i in 1:nrow(concordant.DGE)){
print(i)
genomic.index <- which(concordant.DGE$`Hugo Symbol`[i] == summary$`Hugo Symbol`)
summary.concordance[i,1] <- summary$`Hugo Symbol`[genomic.index]
summary.concordance[i,2] <- summary$Alteration[genomic.index]
summary.concordance[i,3] <- summary$`Subtype Alteration Ratio Difference (Met - Primary)`[genomic.index]
summary.concordance[i,4] <- summary$pval[genomic.index]
summary.concordance[i,5] <- concordant.DGE$`Mean Concordant FC`[i]
summary.concordance[i,6] <- concordant.DGE$`Combined p-val`[i]
p.vec <- c(summary.concordance[i,4], summary.concordance[i,6])
integrated.combined.pval <- sumlog(p.vec)$p
summary.concordance[i,7] <- integrated.combined.pval
}
View(summary)
library(metap)
summary.concordance <- data.frame()
for (i in 1:nrow(concordant.DGE)){
print(i)
genomic.index <- which(concordant.DGE$`Hugo Symbol`[i] == summary$`Hugo Symbol`)
summary.concordance[i,1] <- summary$`Hugo Symbol`[genomic.index]
summary.concordance[i,2] <- summary$Alteration[genomic.index]
summary.concordance[i,3] <- summary$`Subtype Alteration Ratio Difference (Met - Primary)`[genomic.index]
summary.concordance[i,4] <- summary$`Enrichment pval`[genomic.index]
summary.concordance[i,5] <- concordant.DGE$`Mean Concordant FC`[i]
summary.concordance[i,6] <- concordant.DGE$`Combined p-val`[i]
p.vec <- c(summary.concordance[i,4], summary.concordance[i,6])
integrated.combined.pval <- sumlog(p.vec)$p
summary.concordance[i,7] <- integrated.combined.pval
}
summary.concordance[,8] <- p.adjust(summary.concordance$V7, method = 'fdr')
colnames(summary.concordance) <- c("Hugo Symbol", "Alteration", "Subtype Alteration Frequency Difference (Met - Primary)", "Alteration Frequency p-val", "FC Concordant Gene Expression (Subtype Background)", "Concordant Gene Expression p-val", "Combined p-val", "FDR")
# Rank summary table by FDR
summary.concordance <- summary.concordance[order(summary.concordance$FDR, decreasing = FALSE),]
rownames(summary.concordance) <- 1:nrow(summary.concordance)
library(metap)
summary.concordance <- data.frame()
for (i in 1:nrow(concordant.DGE)){
genomic.index <- which(concordant.DGE$`Hugo Symbol`[i] == summary$`Hugo Symbol`)
summary.concordance[i,1] <- summary$`Hugo Symbol`[genomic.index]
summary.concordance[i,2] <- summary$Alteration[genomic.index]
summary.concordance[i,3] <- summary$`Subtype Alteration Ratio Difference (Met - Primary)`[genomic.index]
summary.concordance[i,4] <- summary$`Enrichment pval`[genomic.index]
summary.concordance[i,5] <- concordant.DGE$`Mean Concordant FC`[i]
summary.concordance[i,6] <- concordant.DGE$`Combined p-val`[i]
p.vec <- c(summary.concordance[i,4], summary.concordance[i,6])
integrated.combined.pval <- sumlog(p.vec)$p
summary.concordance[i,7] <- integrated.combined.pval
}
summary.concordance[,8] <- p.adjust(summary.concordance$V7, method = 'fdr')
colnames(summary.concordance) <- c("Hugo Symbol", "Alteration", "Subtype Alteration Frequency Difference (Met - Primary)", "Alteration Frequency p-val", "FC Concordant Gene Expression (Subtype Background)", "Concordant Gene Expression p-val", "Combined p-val", "FDR")
# Rank summary table by FDR
summary.concordance <- summary.concordance[order(summary.concordance$FDR, decreasing = FALSE),]
rownames(summary.concordance) <- 1:nrow(summary.concordance)
View(summary.concordance)
summary.full <- gleason(summary.concordance)
summary.full <- survival(summary.full)
View(summary)
View(summary.full)
hits <- summary.concordance[summary.full$`Survival pval` <= 0.05,]
View(hits)
hits <- summary.concordance[summary.full$`Survival pval` <= 0.05,]
View(hits)
hits <- summary.full[summary.full$`Survival pval` <= 0.05,]
View(hits)
hits <- summary.full[summary.full$`Survival pval` <= 0.05,]
hits <- Bands(hits)
View(hits)
hits <- summary.full[summary.full$`Survival pval` <= 0.05,]
loci <- Bands(hits$`Hugo Symbol`)
View(loci)
hits[,ncol(hits)+1] <- loci$Band
View(hits)
hits$`Survival pval` <- p.adjust(hits$`Survival pval`, method = "fdr")
summary.full <- gleason(summary.concordance)
summary.full <- gleason(summary.concordance)
summary.full$`High-Risk p-val` <- p.adjust(summary.full$`High-Risk p-val`, method = "fdr")
View(summary.full)
summary.full <- survival(summary.full)
summary.full$`Survival pval` <- p.adjust(summary.full$`Survival pval`, method = "fdr")
colnames(summary.full)[10] <- "Survival FDR"
summary.full <- gleason(summary.concordance)
summary.full$`High-Risk p-val` <- p.adjust(summary.full$`High-Risk p-val`, method = "fdr")
colnames(summary.full)[9] <- "Risk FDR"
summary.full <- survival(summary.full)
summary.full$`Survival pval` <- p.adjust(summary.full$`Survival pval`, method = "fdr")
colnames(summary.full)[10] <- "Survival FDR"
hits <- summary.full[summary.full$`Survival FDR` <= 0.05,]
loci <- Bands(hits$`Hugo Symbol`)
hits[,ncol(hits)+1] <- loci$Band
View(hits)
hits <- summary.full[summary.full$`Survival FDR` <= 0.1,]
loci <- Bands(hits$`Hugo Symbol`)
hits[,ncol(hits)+1] <- loci$Band
View(hits)
df <- data.frame(met$Hugo_Symbol)
survival.background <- survival(df)
View(df)
df <- data.frame(met$Hugo_Symbol)
colnames(df) <- "Hugo Symbol"
survival.background <- survival(df)
View(TCGA.coloss)
View(summary.full)
View(hits)
View(summary.full)
View(summary.full)
View(summary.concordance)
View(hits)
hits <- summary.full[summary.full$`Survival FDR` <= 0.3,]
loci <- Bands(hits$`Hugo Symbol`)
hits[,ncol(hits)+1] <- loci$Band
View(hits)
View(summary.full)
