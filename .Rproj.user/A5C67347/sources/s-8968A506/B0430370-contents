---
title: "Genomic Analysis - Mike's Method"
output: html_document
---
# Format CNA data sourced from cBio
```{r, message = FALSE, warning = FALSE}
# TCGA
TCGA <- read.table("TCGA_data.txt", check.names = FALSE, sep = "\t")
TCGA <- as.data.frame(TCGA)
# Taylor
Taylor <- read.table("Taylor_data.txt", check.names = FALSE, sep = "\t")
Taylor <- as.data.frame(Taylor)
# Baca
Baca <- read.table("Baca_data.txt", check.names = FALSE, sep = "\t")
Baca <- as.data.frame(Baca)
# Abida
Abida <- read.table("Abida_data.txt", check.names = FALSE, sep = "\t")
Abida <- as.data.frame(Abida)
```
Combined primary datasets
```{r}
primary <- merge.data.frame(Taylor, TCGA)
primary <- merge.data.frame(primary, Baca)
met <- Abida
```
Filter out genes missing in both primary and metastatic settings
```{r}
# Obtain genes present in primary and metastatic CNA data
genes <- intersect(primary$Hugo_Symbol, met$Hugo_Symbol)
# Create filtering index for primary dataset
primary.index <- c()
for (i in 1:nrow(primary)){
  if (sum(primary$Hugo_Symbol[i] == genes) == 1)
  {primary.index[i] = TRUE}
  if (sum(primary$Hugo_Symbol[i] == genes) == 0)
  {primary.index[i] = FALSE}
}
# Create filtering index for metastatic dataset
met.index <- c()
for (i in 1:nrow(met)){
  if (sum(met$Hugo_Symbol[i] == genes) == 1)
  {met.index[i] = TRUE}
  if (sum(met$Hugo_Symbol[i] == genes) == 0)
  {met.index[i] = FALSE}
}
# Filter primary and metastatic genes. The number of rows for primary and metastatic datasets should now be equal.
primary <- primary[primary.index,]
primary <- primary[duplicated(primary)==FALSE,]
met <- met[met.index,]
met <- met[duplicated(met)==FALSE,]
```
Source analysis scripts
```{r, message=FALSE}
source("analysis scripts.R")
```
Subset coloss and WT patients
```{r}
# Primary
primary.coloss <- subtype_subset(subtype_subset(primary, c("MAP3K7", "loss")), c("CHD1", "loss"))
primary.WT <- subtype_subset(subtype_subset(primary, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
# Metastatic
met.coloss <- subtype_subset(subtype_subset(met, c("MAP3K7", "loss")), c("CHD1", "loss"))
met.WT <- subtype_subset(subtype_subset(met, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
```
# Compute alteration rates
Compute deletion rates in subtype patients
```{r}
# Primary
primary.coloss.del <- lossRank(primary.coloss)
primary.coloss.del <- primary.coloss.del[,c(1,5)]
colnames(primary.coloss.del)[2] <- "Deletion rate: Primary coloss patients"
# Metastatic
met.coloss.del <- lossRank(met.coloss)
met.coloss.del <- met.coloss.del[,c(1,5)]
colnames(met.coloss.del)[2] <- "Deletion rate: Metastatic coloss patients"
```
Compute deletion rates in WT patients
```{r}
# Primary
primary.WT.del <- lossRank(primary.WT)
primary.WT.del <- primary.WT.del[,c(1,5)]
colnames(primary.WT.del)[2] <- "Deletion rate: Primary WT patients"
# Metastatic
met.WT.del <- lossRank(met.WT)
met.WT.del <- met.WT.del[,c(1,5)]
colnames(met.WT.del)[2] <- "Deletion rate: Metastatic WT patients"
```
Compute amplification rates in subtype patients
```{r}
# Primary
primary.coloss.amp <- gainRank(primary.coloss)
primary.coloss.amp <- primary.coloss.amp[,c(1,5)]
colnames(primary.coloss.amp)[2] <- "Amplification rate: Primary coloss patients"
# Metastatic
met.coloss.amp <- gainRank(met.coloss)
met.coloss.amp <- met.coloss.amp[,c(1,5)]
colnames(met.coloss.amp)[2] <- "Amplification rate: Metastatic coloss patients"
```
Compute amplification rates in WT patients
```{r}
# Primary
primary.WT.amp <- gainRank(primary.WT)
primary.WT.amp <- primary.WT.amp[,c(1,5)]
colnames(primary.WT.amp)[2] <- "Amplification rate: Primary WT patients"
# Metastatic
met.WT.amp <- gainRank(met.WT)
met.WT.amp <- met.WT.amp[,c(1,5)]
colnames(met.WT.amp)[2] <- "Amplification rate: Metastatic WT patients"
```
# Filter subtype-specific metastatic regulators
### Create data frames for filtering
Deletions
```{r}
deletions <- merge.data.frame(primary.WT.del, primary.coloss.del)
deletions <- merge.data.frame(deletions, met.WT.del)
deletions <- merge.data.frame(deletions, met.coloss.del)
```
Amplifications
```{r}
amplifications <- merge.data.frame(primary.WT.amp, primary.coloss.amp)
amplifications <- merge.data.frame(amplifications, met.WT.amp)
amplifications <- merge.data.frame(amplifications, met.coloss.amp)
```
### Criterion 1: Alteration rate is greater in the primary setting (gene is co-altered in primary patients)
Deletion rate greater in primary subtype
```{r}
index.del.C1 <- (deletions$`Deletion rate: Primary coloss patients` > deletions$`Deletion rate: Primary WT patients`)
del.C1.genes <- deletions$Hugo_Symbol[index.del.C1]
```
Amplification rate greater in primary subtype
```{r}
index.amp.C1 <- (amplifications$`Amplification rate: Primary coloss patients` > amplifications$`Amplification rate: Primary WT patients`)
amp.C1.genes <- amplifications$Hugo_Symbol[index.amp.C1]
```
### Criterion 2: Alteration rate in WT metastatic patients ~ alteration rate in WT primary patients (gene is not under metastatic selection pressure)
Filter deletions
```{r}
index.del.C2 <- (abs(deletions$`Deletion rate: Metastatic WT patients`-deletions$`Deletion rate: Primary WT patients`) <= 0.02)
del.C2.genes <- deletions$Hugo_Symbol[index.del.C2]
```
Filter amplifications
```{r}
index.amp.C2 <- ((abs(amplifications$`Amplification rate: Metastatic WT patients`- amplifications$`Amplification rate: Primary WT patients`)) <= 0.02)
amp.C2.genes <- amplifications$Hugo_Symbol[index.amp.C2]
```
# Compute enrichment
### Compute deletion enrichment
Isolate deleted genes for filtering
```{r}
# Genes present in all 4 datasets
genes <- intersect(primary$Hugo_Symbol, met$Hugo_Symbol)
# Deleted genes meeting Criteria 1 and 2
genes <- intersect(genes, del.C1.genes)
genes <- intersect(genes, del.C2.genes)
```
Reformat Abida
```{r}
# Subset Abida patients
Abida.coloss <- subtype_subset(subtype_subset(Abida, c("MAP3K7", "loss")), c("CHD1", "loss"))
Abida.WT <- subtype_subset(subtype_subset(Abida, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
# Reformat Abida
index <- c()
for (i in 1:nrow(Abida)){
  if (sum(Abida$Hugo_Symbol[i] == genes) == 1)
  {index[i] = TRUE}
  if (sum(Abida$Hugo_Symbol[i] == genes) == 0)
  {index[i] = FALSE}
}
Abida.coloss.filtered <- Abida.coloss[index,]
Abida.WT.filtered <- Abida.WT[index,]
```
Taylor deletion enrichment
```{r}
# Subset Taylor patients
Taylor <- na.omit(Taylor)
Taylor.coloss <- subtype_subset(subtype_subset(Taylor, c("MAP3K7", "loss")), c("CHD1", "loss"))
Taylor.WT <- subtype_subset(subtype_subset(Taylor, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
# Reformat Taylor CNA data
index <- c()
for (i in 1:nrow(Taylor)){
  if (sum(Taylor$Hugo_Symbol[i] == genes) == 1)
  {index[i] = TRUE}
  if (sum(Taylor$Hugo_Symbol[i] == genes) == 0)
  {index[i] = FALSE}
}
Taylor.coloss.filtered <- Taylor.coloss[index,]
Taylor.WT.filtered <- Taylor.WT[index,]
# Compute Taylor deletion enrichment
Taylor.del.enrichment <- concurrent.loss.data(Abida.coloss.filtered, Taylor.coloss.filtered)
Taylor.del.enrichment <- Taylor.del.enrichment[(duplicated(Taylor.del.enrichment$Hugo_Symbol)==FALSE),]
```
TCGA deletion enrichment
```{r}
# Subset TCGA patients
TCGA.coloss <- subtype_subset(subtype_subset(TCGA, c("MAP3K7", "loss")), c("CHD1", "loss"))
TCGA.WT <- subtype_subset(subtype_subset(TCGA, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
# Reformat TCGA CNA data
index <- c()
for (i in 1:nrow(TCGA)){
  if (sum(TCGA$Hugo_Symbol[i] == genes) == 1)
  {index[i] = TRUE}
  if (sum(TCGA$Hugo_Symbol[i] == genes) == 0)
  {index[i] = FALSE}
}
TCGA.coloss.filtered <- TCGA.coloss[index,]
TCGA.WT.filtered <- TCGA.WT[index,]
# Compute TCGA deletion enrichment
TCGA.del.enrichment <- concurrent.loss.data(Abida.coloss.filtered, TCGA.coloss.filtered)
```
Baca deletion enrichment
```{r}
# Subset Baca patients
Baca.coloss <- subtype_subset(subtype_subset(Baca, c("MAP3K7", "loss")), c("CHD1", "loss"))
Baca.WT <- subtype_subset(subtype_subset(Baca, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
# Reformat Baca CNA data
index <- c()
for (i in 1:nrow(Baca)){
  if (sum(Baca$Hugo_Symbol[i] == genes) == 1)
  {index[i] = TRUE}
  if (sum(Baca$Hugo_Symbol[i] == genes) == 0)
  {index[i] = FALSE}
}
Baca.coloss.filtered <- Baca.coloss[index,]
Baca.WT.filtered <- Baca.WT[index,]
# Compute Baca deletion enrichment
Baca.del.enrichment <- concurrent.loss.data(Abida.coloss.filtered, Baca.coloss.filtered)
```
### Compute amplification enrichment
Isolate amplified genes for filtering
```{r}
# Genes present in all 4 datasets
genes <- intersect(primary$Hugo_Symbol, met$Hugo_Symbol)
# Deleted genes meeting Criteria 1 and 2
genes <- intersect(genes, amp.C1.genes)
genes <- intersect(genes, amp.C2.genes)
```
Reformat Abida
```{r}
# Subset Abida patients
Abida.coloss <- subtype_subset(subtype_subset(Abida, c("MAP3K7", "loss")), c("CHD1", "loss"))
Abida.WT <- subtype_subset(subtype_subset(Abida, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
# Reformat Abida
index <- c()
for (i in 1:nrow(Abida)){
  if (sum(Abida$Hugo_Symbol[i] == genes) == 1)
  {index[i] = TRUE}
  if (sum(Abida$Hugo_Symbol[i] == genes) == 0)
  {index[i] = FALSE}
}
Abida.coloss.filtered <- Abida.coloss[index,]
Abida.WT.filtered <- Abida.WT[index,]
```
Taylor amplification enrichment
```{r}
# Subset Taylor patients
Taylor.coloss <- subtype_subset(subtype_subset(Taylor, c("MAP3K7", "loss")), c("CHD1", "loss"))
Taylor.coloss <- na.omit(Taylor.coloss)
Taylor.WT <- subtype_subset(subtype_subset(Taylor, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
Taylor.WT <- na.omit(Taylor.WT)
Taylor <- na.omit(Taylor)
# Reformat Taylor
index <- c()
for (i in 1:nrow(Taylor)){
  if (sum(Taylor$Hugo_Symbol[i] == genes) == 1)
  {index[i] = TRUE}
  if (sum(Taylor$Hugo_Symbol[i] == genes) == 0)
  {index[i] = FALSE}
}
Taylor.coloss.filtered <- Taylor.coloss[index,]
Taylor.WT.filtered <- Taylor.WT[index,]
# Compute Taylor deletion enrichment
if (length(Taylor.coloss.filtered$Hugo_Symbol) > 0){
  Taylor.amp.enrichment <- concurrent.gain.data(Abida.coloss.filtered, Taylor.coloss.filtered)
}
```
TCGA amplification enrichment
```{r}
# Subset TCGA patients
TCGA.coloss <- subtype_subset(subtype_subset(TCGA, c("MAP3K7", "loss")), c("CHD1", "loss"))
TCGA.WT <- subtype_subset(subtype_subset(TCGA, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
# Reformat TCGA
index <- c()
for (i in 1:nrow(TCGA)){
  if (sum(TCGA$Hugo_Symbol[i] == genes) == 1)
  {index[i] = TRUE}
  if (sum(TCGA$Hugo_Symbol[i] == genes) == 0)
  {index[i] = FALSE}
}
TCGA.coloss.filtered <- TCGA.coloss[index,]
TCGA.WT.filtered <- TCGA.WT[index,]
# Compute TCGA deletion enrichment
if (length(TCGA.coloss.filtered$Hugo_Symbol) > 0){
  TCGA.amp.enrichment <- concurrent.gain.data(Abida.coloss.filtered, TCGA.coloss.filtered)
}
```
Baca amplification enrichment
```{r}
# Subset Baca patients
Baca.coloss <- subtype_subset(subtype_subset(Baca, c("MAP3K7", "loss")), c("CHD1", "loss"))
Baca.WT <- subtype_subset(subtype_subset(Baca, c("MAP3K7", "WT/gain")), c("CHD1", "WT/gain"))
# Reformat Baca
index <- c()
for (i in 1:nrow(Baca)){
  if (sum(Baca$Hugo_Symbol[i] == genes) == 1)
  {index[i] = TRUE}
  if (sum(Baca$Hugo_Symbol[i] == genes) == 0)
  {index[i] = FALSE}
}
Baca.coloss.filtered <- Baca.coloss[index,]
Baca.WT.filtered <- Baca.WT[index,]
# Compute Baca deletion enrichment
if (length(Baca.coloss.filtered$Hugo_Symbol) > 0){
  Baca.amp.enrichment <- concurrent.gain.data(Abida.coloss.filtered, Baca.coloss.filtered)
}
```
# Compute combined p-values
### Combined deletion pval
Combine deletion enrichment results
```{r}
# Enrichment metric for ranking
combined.del.enrichment <- cbind(Taylor.del.enrichment, Baca.del.enrichment)
combined.del.enrichment <- cbind(combined.del.enrichment, TCGA.del.enrichment)
combined.del.enrichment <- combined.del.enrichment[,c(1,9,20,31)]
colnames(combined.del.enrichment) <- c("Hugo Symbol", "Taylor pval", "Baca pval", "TCGA pval")
```
Compute combined deletion pval
```{r, warning=FALSE}
library(metap)
# Compute combined pval for ranking, then correct to FDR
for (i in 1:nrow(combined.del.enrichment)){
  test <- sumlog(combined.del.enrichment[i,c(2:4)])
  pval <- test$p
  combined.del.enrichment[i,5] <- pval
}
combined.del.enrichment[,6] <- p.adjust(combined.del.enrichment[,5], method = "fdr")
colnames(combined.del.enrichment)[5:6] <- c("combined del pval", "FDR")
```
### Combined amplification pval
Combine amplification enrichment results
```{r}
# Enrichment metric for ranking
if (exists("Taylor.amp.enrichment") & exists("TCGA.amp.enrichment") & exists("Baca.amp.enrichment")){
  combined.amp.enrichment <- cbind(Taylor.amp.enrichment, TCGA.amp.enrichment)
  combined.amp.enrichment <- cbind(combined.amp.enrichment, Baca.amp.enrichment)
  combined.amp.enrichment <- combined.amp.enrichment[,c(1,9,20,31)]
  colnames(combined.amp.enrichment) <- c("Hugo Symbol", "Taylor pval", "TCGA pval", "Baca pval")
}
```
Compute combined amplification pval
```{r, warning=FALSE}
# Compute combined pval for ranking, then correct to FDR
if (exists("combined.amp.enrichment")){
  for (i in 1:nrow(combined.amp.enrichment)){
    test <- sumlog(combined.amp.enrichment[i,c(2:4)])
    pval <- test$p
    combined.amp.enrichment[i,5] <- pval
    }
combined.amp.enrichment[,6] <- p.adjust(combined.amp.enrichment[,5], method = "fdr")
colnames(combined.amp.enrichment)[5:6] <- c("combined amp pval", "Ranked FDR")
}
```
# Report alterations ranked by FDR
Identify genes that are deleted or amplified
```{r}
if (exists("combined.amp.enrichment") & exists("combined.del.enrichment")){
  deleted <- setdiff(combined.del.enrichment$`Hugo Symbol`, combined.amp.enrichment$`Hugo Symbol`)
  amplified <- setdiff(combined.amp.enrichment$`Hugo Symbol`, combined.del.enrichment$`Hugo Symbol`)
}
if ((exists("combined.amp.enrichment") == FALSE) & exists("combined.del.enrichment")){
  deleted <- combined.del.enrichment$`Hugo Symbol`
  }
```
Construct summary table
```{r}
# Construct deletion alteration table
if (length(deleted) > 0){
  deleted <- as.data.frame(deleted)
  deleted[,2] <- "Deletion"
  for (i in (1:nrow(deleted))) {
    index1 <- which(met.coloss.del$Hugo_Symbol == deleted[i,1])
    index2 <- which(primary.coloss.del$Hugo_Symbol == deleted[i,1])
    index3 <- which(combined.del.enrichment$`Hugo Symbol` == deleted[i,1])
    deleted[i,3] <- met.coloss.del[index1, 2] - primary.coloss.del[index2, 2]
    deleted[i,4] <- combined.del.enrichment[index3, 5]
  }
  #deleted[,4] <- p.adjust(deleted[,4], method = "fdr")
colnames(deleted) <- c("Hugo Symbol", "Alteration", "Subtype Alteration Ratio Difference (Met - Primary)","combined pval")
}
# Construct amplification alteration table
if (exists("amplified")){
  amplified <- as.data.frame(amplified)
  amplified[,2] <- "Amplification"
  for (i in (1:nrow(amplified))) {
    index <- which(combined.amp.enrichment$`Hugo Symbol` == amplified[i,1])
    index2 <- which(primary.coloss.amp$Hugo_Symbol == amplified[i,1])
    amplified[i,3] <- primary.coloss.amp[index2, 2] / primary.WT.amp[index2, 2]
    amplified[i,4] <- combined.C1.amp.enrichment[index, 6]
    amplified[i,5] <- met.coloss.amp[index2, 2] / primary.coloss.amp[index2, 2]
    amplified[i,6] <- combined.amp.enrichment[index, 6]
  }
colnames(amplified) <- c("Hugo Symbol", "Alteration", "Weighted Primary Co-Alteration Ratio (Subtype:WT)", "Primary Co-Alteration FDR", "Weighted Subtype Metastatic Alteration Ratio (Met:Primary)","Subtype Metastatic Alteration FDR")# Combine deletion and amplification alteration tables.
summary <- rbind(deleted, amplified)
}
summary <- deleted
library(DT)
datatable(summary)
```
Show distribution of significance
```{r}
# Determine FDR cutoff for enrichment in metastatic subtype
metastatic <- -log10(summary$`combined pval`)
hist(metastatic, breaks = seq(0, 3, by = 0.05),
     xlab = "-log10 combined pval", ylab = "Number of genes", main = "Met:Primary Subtype Alteration Enrichment")
```
Order summary table
```{r}
summary <- summary[order(summary$`Subtype Alteration Ratio Difference (Met - Primary)`, decreasing = TRUE),]
# Report genomic hits
datatable(summary)
```